from django.shortcuts import render, redirect, get_object_or_404
from django.contrib import messages
from django.http import HttpRequest, HttpResponse
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger
from .models import Product, ContactInfo, Category
import re


def index(request: HttpRequest) -> HttpResponse:
    """ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–º–∞—à–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)
    products_list = Product.objects.select_related('category').order_by('-created_at')

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    products_per_page = 6  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    paginator = Paginator(products_list, products_per_page)

    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ GET-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    page_number = request.GET.get('page', 1)

    try:
        products = paginator.page(page_number)
    except PageNotAnInteger:
        # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        products = paginator.page(1)
    except EmptyPage:
        # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–æ–ª—å—à–µ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é
        products = paginator.page(paginator.num_pages)

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print("=" * 50)
    print(f"üì¶ –ö–ê–¢–ê–õ–û–ì –¢–û–í–ê–†–û–í (–°—Ç—Ä–∞–Ω–∏—Ü–∞ {products.number} –∏–∑ {paginator.num_pages}):")
    print("=" * 50)
    print(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {paginator.count}")
    print(f"–¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(products.object_list)}")
    print(f"–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {products.number}")
    print(f"–ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {products.has_next()}")
    print(f"–ï—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {products.has_previous()}")

    for i, product in enumerate(products.object_list, 1):
        print(f"{i}. {product.name}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.category.name}")
        print(f"   –¶–µ–Ω–∞: {product.price} —Ä—É–±.")
        print(f"   –°–æ–∑–¥–∞–Ω: {product.created_at.strftime('%d.%m.%Y %H:%M')}")
        print("-" * 30)

    if not products.object_list:
        print("‚ùå –ü—Ä–æ–¥—É–∫—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    print("=" * 50)

    context = {
        'title': '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - Skystore',
        'description': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤!',
        'products': products,  # –ò–∑–º–µ–Ω–∏–ª–∏ —Å latest_products –Ω–∞ products
        'paginator': paginator,  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –ø–∞–≥–∏–Ω–∞—Ç–æ—Ä–∞
    }
    return render(request, 'catalog/home.html', context)


def contacts(request: HttpRequest) -> HttpResponse:
    """ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å —Ñ–æ—Ä–º–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""

    if request.method == 'POST':
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        name = request.POST.get('name', '').strip()
        phone = request.POST.get('phone', '').strip()
        message = request.POST.get('message', '').strip()

        # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        errors = []

        if errors:
            for error in errors:
                messages.error(request, error)
        else:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –¥–æ—Ä–∞–±–æ—Ç–∞–µ–º –ø–æ–∑–¥–Ω–µ–µ

            messages.success(
                request,
                f'–°–ø–∞—Å–∏–±–æ, {name}! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. '
                f'–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
            )

            # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ç—É –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            return redirect('contacts')

    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        contact_info = ContactInfo.objects.filter(is_active=True).first()
        if contact_info:
            context = {
                'title': '–ö–æ–Ω—Ç–∞–∫—Ç—ã - Skystore',
                'company_name': contact_info.company_name,
                'address': contact_info.address,
                'phone': contact_info.phone,
                'email': contact_info.email,
                'working_hours': contact_info.working_hours,
                'description': contact_info.description,
            }
        else:
            # Fallback –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –≤ –ë–î –Ω–∏—á–µ–≥–æ –Ω–µ—Ç
            context = {
                'title': '–ö–æ–Ω—Ç–∞–∫—Ç—ã - Skystore',
                'company_name': 'Skystore',
                'address': '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123, –æ—Ñ–∏—Å 456',
                'phone': '+7 (495) 123-45-67',
                'email': 'info@skystore.ru',
                'working_hours': '–ü–Ω-–ü—Ç: 9:00-18:00, –°–±-–í—Å: 10:00-16:00',
                'description': '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.',
            }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        context = {
            'title': '–ö–æ–Ω—Ç–∞–∫—Ç—ã - Skystore',
            'company_name': 'Skystore',
            'address': '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123, –æ—Ñ–∏—Å 456',
            'phone': '+7 (495) 123-45-67',
            'email': 'info@skystore.ru',
            'working_hours': '–ü–Ω-–ü—Ç: 9:00-18:00, –°–±-–í—Å: 10:00-16:00',
            'description': '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.',
        }

    return render(request, 'catalog/contacts.html', context)


def product_detail(request: HttpRequest, product_id: int) -> HttpResponse:
    """–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ
    Args: request (HttpRequest): HTTP –∑–∞–ø—Ä–æ—Å
          product_id (int): ID —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    Returns: HttpResponse: –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ –∏–ª–∏ 404 """

    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å —Å–≤—è–∑–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
    # get_object_or_404 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω–µ—Ç 404, –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
    product = get_object_or_404(
        Product.objects.select_related('category'),
        id=product_id
    )

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print("=" * 50)
    print("üì¶ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –¢–û–í–ê–†–ï:")
    print("=" * 50)
    print(f"ID: {product.pk}")
    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {product.name}")
    print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.category.name}")
    print(f"–¶–µ–Ω–∞: {product.price} —Ä—É–±.")
    print(f"–°–æ–∑–¥–∞–Ω: {product.created_at.strftime('%d.%m.%Y %H:%M')}")
    print(f"–û–±–Ω–æ–≤–ª–µ–Ω: {product.updated_at.strftime('%d.%m.%Y %H:%M')}")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {product.description}")
    if product.image:
        print(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {product.image.url}")
    print("=" * 50)

    # –ü–æ–ª—É—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ —Ç–æ–π –∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–∏–π)
    related_products = Product.objects.filter(
        category=product.category
    ).exclude(
        id=product.pk
    ).order_by('-created_at')[:4]  # –ë–µ—Ä–µ–º 4 —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞

    context = {
        'title': f'{product.name} - Skystore',
        'product': product,
        'related_products': related_products,
    }

    return render(request, 'catalog/product_detail.html', context)


def add_product(request):
    """–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    if request.method == 'POST':
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
        name = request.POST.get('name')
        description = request.POST.get('description')
        price = request.POST.get('price')
        category_id = request.POST.get('category')
        image = request.FILES.get('image')

        # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
        if name and description and price:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç
            product = Product.objects.create(
                name=name,
                description=description,
                price=price,
                category_id=category_id,
                image=image
            )
            messages.success(request, '–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')
            return redirect('index')
        else:
            messages.error(request, '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!')

    categories = Category.objects.all()
    return render(request, 'catalog/add_product.html', {'categories': categories})